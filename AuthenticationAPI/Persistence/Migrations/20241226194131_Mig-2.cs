using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace AuthenticationAPI.Persistence.Migrations
{
    /// <inheritdoc />
    public partial class Mig2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 188, 45, 127, 31, 147, 63, 229, 153, 100, 69, 217, 169, 85, 140, 169, 235, 148, 23, 226, 246, 124, 100, 9, 221, 84, 143, 6, 243, 56, 186, 138, 238, 129, 100, 35, 98, 61, 208, 149, 69, 102, 32, 41, 170, 230, 75, 165, 49, 86, 78, 63, 69, 214, 148, 181, 254, 79, 231, 201, 64, 216, 255, 111, 143 }, new byte[] { 135, 80, 12, 52, 51, 109, 17, 58, 78, 125, 124, 81, 146, 200, 235, 191, 10, 246, 116, 2, 8, 92, 134, 160, 218, 25, 110, 125, 175, 134, 23, 187, 238, 56, 134, 95, 140, 245, 59, 46, 102, 11, 230, 215, 194, 215, 59, 122, 31, 192, 98, 28, 252, 35, 5, 41, 69, 245, 0, 177, 50, 190, 108, 116, 244, 28, 199, 159, 77, 75, 94, 23, 199, 194, 232, 37, 42, 166, 42, 207, 92, 58, 33, 156, 96, 204, 67, 250, 17, 94, 239, 112, 48, 81, 31, 111, 132, 121, 10, 39, 101, 138, 221, 82, 133, 212, 178, 72, 113, 51, 194, 104, 60, 24, 219, 152, 188, 174, 75, 160, 193, 85, 220, 237, 68, 18, 156, 210 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 188, 45, 127, 31, 147, 63, 229, 153, 100, 69, 217, 169, 85, 140, 169, 235, 148, 23, 226, 246, 124, 100, 9, 221, 84, 143, 6, 243, 56, 186, 138, 238, 129, 100, 35, 98, 61, 208, 149, 69, 102, 32, 41, 170, 230, 75, 165, 49, 86, 78, 63, 69, 214, 148, 181, 254, 79, 231, 201, 64, 216, 255, 111, 143 }, new byte[] { 135, 80, 12, 52, 51, 109, 17, 58, 78, 125, 124, 81, 146, 200, 235, 191, 10, 246, 116, 2, 8, 92, 134, 160, 218, 25, 110, 125, 175, 134, 23, 187, 238, 56, 134, 95, 140, 245, 59, 46, 102, 11, 230, 215, 194, 215, 59, 122, 31, 192, 98, 28, 252, 35, 5, 41, 69, 245, 0, 177, 50, 190, 108, 116, 244, 28, 199, 159, 77, 75, 94, 23, 199, 194, 232, 37, 42, 166, 42, 207, 92, 58, 33, 156, 96, 204, 67, 250, 17, 94, 239, 112, 48, 81, 31, 111, 132, 121, 10, 39, 101, 138, 221, 82, 133, 212, 178, 72, 113, 51, 194, 104, 60, 24, 219, 152, 188, 174, 75, 160, 193, 85, 220, 237, 68, 18, 156, 210 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 205, 106, 25, 107, 9, 106, 222, 215, 55, 185, 249, 218, 212, 87, 118, 232, 9, 135, 165, 192, 106, 254, 151, 169, 163, 192, 41, 93, 67, 238, 107, 195, 32, 204, 97, 187, 239, 65, 254, 37, 172, 163, 225, 185, 96, 62, 19, 243, 230, 191, 20, 138, 188, 72, 136, 213, 50, 82, 11, 138, 143, 99, 161, 92 }, new byte[] { 57, 56, 172, 134, 203, 126, 14, 136, 243, 223, 148, 95, 129, 251, 185, 62, 223, 23, 43, 215, 179, 189, 78, 191, 173, 123, 125, 54, 144, 240, 214, 28, 185, 4, 25, 37, 52, 73, 106, 140, 103, 178, 61, 147, 204, 175, 34, 214, 140, 39, 70, 97, 99, 214, 189, 192, 10, 188, 109, 67, 222, 116, 85, 128, 146, 158, 97, 57, 58, 47, 120, 31, 221, 98, 250, 208, 221, 186, 73, 0, 127, 248, 25, 161, 154, 106, 57, 39, 187, 154, 81, 159, 155, 129, 21, 131, 110, 23, 82, 246, 148, 234, 179, 88, 227, 159, 42, 52, 134, 75, 10, 168, 166, 52, 196, 80, 4, 105, 183, 71, 203, 32, 195, 203, 34, 44, 41, 44 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 205, 106, 25, 107, 9, 106, 222, 215, 55, 185, 249, 218, 212, 87, 118, 232, 9, 135, 165, 192, 106, 254, 151, 169, 163, 192, 41, 93, 67, 238, 107, 195, 32, 204, 97, 187, 239, 65, 254, 37, 172, 163, 225, 185, 96, 62, 19, 243, 230, 191, 20, 138, 188, 72, 136, 213, 50, 82, 11, 138, 143, 99, 161, 92 }, new byte[] { 57, 56, 172, 134, 203, 126, 14, 136, 243, 223, 148, 95, 129, 251, 185, 62, 223, 23, 43, 215, 179, 189, 78, 191, 173, 123, 125, 54, 144, 240, 214, 28, 185, 4, 25, 37, 52, 73, 106, 140, 103, 178, 61, 147, 204, 175, 34, 214, 140, 39, 70, 97, 99, 214, 189, 192, 10, 188, 109, 67, 222, 116, 85, 128, 146, 158, 97, 57, 58, 47, 120, 31, 221, 98, 250, 208, 221, 186, 73, 0, 127, 248, 25, 161, 154, 106, 57, 39, 187, 154, 81, 159, 155, 129, 21, 131, 110, 23, 82, 246, 148, 234, 179, 88, 227, 159, 42, 52, 134, 75, 10, 168, 166, 52, 196, 80, 4, 105, 183, 71, 203, 32, 195, 203, 34, 44, 41, 44 } });
        }
    }
}
